{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Gitlab-Sentinel",
            "type": "string"
        },
        "PersonalAccessToken": {
            "type": "securestring",
            "defaultValue": "<Personal Access Token>",
            "metadata": {
                "description": "The personal access token for gitlab instance with read access."
            }
        },
        "ProjectIds": {
            "type": "string",
            "defaultValue": "<ProjectIDs>",
            "metadata": {
                "description": "The project id for gitlab projects to be audited."
            }
        },
        "GroupIds": {
            "type": "string",
            "defaultValue": "<GroupIDs>",
            "metadata": {
                "description": "The group Id for gitlab groups to be audited."
            }
        },
        "workspaceId": {
            "type": "string"
        },
        "workSpaceKey": {
            "type": "securestring"
        }
    },
    "functions": [],
    "variables": {
        "AzureKeyVaultName": "[concat('kv-', parameters('PlaybookName'))]",
        "AzureKeyVaultConnectionName": "[concat('kv-', parameters('PlaybookName'))]",
        "azureloganalyticsdatacollector": "[concat('azureloganalyticsdatacollector-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "name": "[variables('AzureKeyVaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "GitLab-KeyVault",
                "Author": "Quantum Security"
            },
            "properties": {
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": false,
                "enableSoftDelete": true,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('PlaybookName')), '2017-07-01', 'Full').identity.principalId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "get",
                                "list"
                            ],
                            "certificates": []
                        }
                    }
                ],
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            }
        },
        {
            "name": "[variables('azureloganalyticsdatacollector')]",
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "displayName": "[variables('azureloganalyticsdatacollector')]",
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
                },
                "parameterValues": {
                    "username": "[parameters('workspaceId')]",
                    "password": "[parameters('workSpaceKey')]"
                }
            }
        },
        {
            "name": "[variables('AzureKeyVaultConnectionName')]",
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "displayName": "[variables('AzureKeyVaultConnectionName')]",
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[variables('AzureKeyVaultName')]"
                },
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('AzureKeyVaultName'), '/', 'GitlabSecret')]",
            "apiVersion": "2016-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('AzureKeyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('PersonalAccessToken')]",
                "contentType": "string",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureKeyVaultConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('azureloganalyticsdatacollector'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Current_time": {
                            "inputs": {},
                            "kind": "CurrentTime",
                            "runAfter": {},
                            "type": "Expression"
                        },
                        "For_each_Group_ID": {
                            "actions": {
                                "Get_total_pages_for_Group_logs": {
                                    "inputs": {
                                        "headers": {
                                            "PRIVATE-TOKEN": "@body('Get_secret')?['value']",
                                            "created_after": "@variables('created_after')"
                                        },
                                        "method": "GET",
                                        "uri": "https://gitlab.com/api/v4/groups/@{int(items('For_each_Group_ID'))}/audit_events"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                },
                                "Parse_Group_Headers": {
                                    "inputs": {
                                        "content": "@outputs('Get_total_pages_for_Group_logs')['headers']",
                                        "schema": {
                                            "properties": {
                                                "CF-Cache-Status": {
                                                    "type": "string"
                                                },
                                                "CF-RAY": {
                                                    "type": "string"
                                                },
                                                "Cache-Control": {
                                                    "type": "string"
                                                },
                                                "Connection": {
                                                    "type": "string"
                                                },
                                                "Content-Length": {
                                                    "type": "string"
                                                },
                                                "Content-Type": {
                                                    "type": "string"
                                                },
                                                "Date": {
                                                    "type": "string"
                                                },
                                                "ETag": {
                                                    "type": "string"
                                                },
                                                "Expect-CT": {
                                                    "type": "string"
                                                },
                                                "GitLab-LB": {
                                                    "type": "string"
                                                },
                                                "GitLab-SV": {
                                                    "type": "string"
                                                },
                                                "Link": {
                                                    "type": "string"
                                                },
                                                "NEL": {
                                                    "type": "string"
                                                },
                                                "RateLimit-Limit": {
                                                    "type": "string"
                                                },
                                                "RateLimit-Observed": {
                                                    "type": "string"
                                                },
                                                "RateLimit-Remaining": {
                                                    "type": "string"
                                                },
                                                "RateLimit-Reset": {
                                                    "type": "string"
                                                },
                                                "RateLimit-ResetTime": {
                                                    "type": "string"
                                                },
                                                "Referrer-Policy": {
                                                    "type": "string"
                                                },
                                                "Report-To": {
                                                    "type": "string"
                                                },
                                                "Server": {
                                                    "type": "string"
                                                },
                                                "Strict-Transport-Security": {
                                                    "type": "string"
                                                },
                                                "Transfer-Encoding": {
                                                    "type": "string"
                                                },
                                                "Vary": {
                                                    "type": "string"
                                                },
                                                "X-Content-Type-Options": {
                                                    "type": "string"
                                                },
                                                "X-Frame-Options": {
                                                    "type": "string"
                                                },
                                                "X-Next-Page": {
                                                    "type": "string"
                                                },
                                                "X-Page": {
                                                    "type": "string"
                                                },
                                                "X-Per-Page": {
                                                    "type": "string"
                                                },
                                                "X-Prev-Page": {
                                                    "type": "string"
                                                },
                                                "X-Request-Id": {
                                                    "type": "string"
                                                },
                                                "X-Runtime": {
                                                    "type": "string"
                                                },
                                                "X-Total": {
                                                    "type": "string"
                                                },
                                                "X-Total-Pages": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "runAfter": {
                                        "Get_total_pages_for_Group_logs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson"
                                },
                                "Until_Group_Audit": {
                                    "actions": {
                                        "HTTP": {
                                            "inputs": {
                                                "headers": {
                                                    "PRIVATE-TOKEN": "@body('Get_secret')?['value']",
                                                    "created_after": "@variables('created_after')"
                                                },
                                                "method": "GET",
                                                "uri": "https://gitlab.com/api/v4/groups/@{int(items('For_each_Group_ID'))}/audit_events?per_page=100&page=@{variables('PageNum')}"
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        },
                                        "Post_Group_Audit_Events": {
                                            "inputs": {
                                                "body": "@{body('Get_total_pages_for_Group_logs')}",
                                                "headers": {
                                                    "Log-Type": "GitLabGroup"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/api/logs"
                                            },
                                            "runAfter": {
                                                "HTTP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "expression": "@equals(variables('PageNum'), int(body('Parse_Group_Headers')?['X-Total-Pages']))",
                                    "limit": {
                                        "count": 60,
                                        "timeout": "PT1H"
                                    },
                                    "runAfter": {
                                        "Parse_Group_Headers": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Until"
                                }
                            },
                            "foreach": "[concat('@split(''',parameters('GroupIds'),''','','')')]",
                            "runAfter": {
                                "Initialize_Group_IDs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_project_ID": {
                            "actions": {
                                "Get_total_pages_for_Project_logs": {
                                    "inputs": {
                                        "headers": {
                                            "PRIVATE-TOKEN": "@body('Get_secret')?['value']",
                                            "created_after": "@variables('created_after')"
                                        },
                                        "method": "GET",
                                        "uri": "https://gitlab.com/api/v4/projects/@{int(items('For_each_project_ID'))}/audit_events"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                },
                                "Parse_project_Headers": {
                                    "inputs": {
                                        "content": "@outputs('Get_total_pages_for_Project_logs')['headers']",
                                        "schema": {
                                            "properties": {
                                                "CF-Cache-Status": {
                                                    "type": "string"
                                                },
                                                "CF-RAY": {
                                                    "type": "string"
                                                },
                                                "Cache-Control": {
                                                    "type": "string"
                                                },
                                                "Connection": {
                                                    "type": "string"
                                                },
                                                "Content-Length": {
                                                    "type": "string"
                                                },
                                                "Content-Type": {
                                                    "type": "string"
                                                },
                                                "Date": {
                                                    "type": "string"
                                                },
                                                "ETag": {
                                                    "type": "string"
                                                },
                                                "Expect-CT": {
                                                    "type": "string"
                                                },
                                                "GitLab-LB": {
                                                    "type": "string"
                                                },
                                                "GitLab-SV": {
                                                    "type": "string"
                                                },
                                                "Link": {
                                                    "type": "string"
                                                },
                                                "NEL": {
                                                    "type": "string"
                                                },
                                                "RateLimit-Limit": {
                                                    "type": "string"
                                                },
                                                "RateLimit-Observed": {
                                                    "type": "string"
                                                },
                                                "RateLimit-Remaining": {
                                                    "type": "string"
                                                },
                                                "RateLimit-Reset": {
                                                    "type": "string"
                                                },
                                                "RateLimit-ResetTime": {
                                                    "type": "string"
                                                },
                                                "Referrer-Policy": {
                                                    "type": "string"
                                                },
                                                "Report-To": {
                                                    "type": "string"
                                                },
                                                "Server": {
                                                    "type": "string"
                                                },
                                                "Strict-Transport-Security": {
                                                    "type": "string"
                                                },
                                                "Transfer-Encoding": {
                                                    "type": "string"
                                                },
                                                "Vary": {
                                                    "type": "string"
                                                },
                                                "X-Content-Type-Options": {
                                                    "type": "string"
                                                },
                                                "X-Frame-Options": {
                                                    "type": "string"
                                                },
                                                "X-Next-Page": {
                                                    "type": "string"
                                                },
                                                "X-Page": {
                                                    "type": "string"
                                                },
                                                "X-Per-Page": {
                                                    "type": "string"
                                                },
                                                "X-Prev-Page": {
                                                    "type": "string"
                                                },
                                                "X-Request-Id": {
                                                    "type": "string"
                                                },
                                                "X-Runtime": {
                                                    "type": "string"
                                                },
                                                "X-Total": {
                                                    "type": "string"
                                                },
                                                "X-Total-Pages": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "runAfter": {
                                        "Get_total_pages_for_Project_logs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson"
                                },
                                "Until_Project_Audit": {
                                    "actions": {
                                        "Get_Project_Audit_Events": {
                                            "inputs": {
                                                "headers": {
                                                    "PRIVATE-TOKEN": "@body('Get_secret')?['value']",
                                                    "created_after": "@variables('created_after')"
                                                },
                                                "method": "GET",
                                                "uri": "https://gitlab.com/api/v4/projects/@{int(items('For_each_project_ID'))}/audit_events?per_page=100&page=@{variables('PageNum')}"
                                            },
                                            "runAfter": {
                                                "Increment_Project_page_nuumber": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "Increment_Project_page_nuumber": {
                                            "inputs": {
                                                "name": "PageNum"
                                            },
                                            "runAfter": {},
                                            "type": "IncrementVariable"
                                        },
                                        "Post_Project_Audit_Events": {
                                            "inputs": {
                                                "body": "@{body('Get_total_pages_for_Project_logs')}",
                                                "headers": {
                                                    "Log-Type": "GitLabProject"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/api/logs"
                                            },
                                            "runAfter": {
                                                "Get_Project_Audit_Events": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "expression": "@equals(variables('PageNum'), int(body('Parse_project_Headers')?['X-Total-Pages']))",
                                    "limit": {
                                        "count": 60,
                                        "timeout": "PT1H"
                                    },
                                    "runAfter": {
                                        "Parse_project_Headers": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Until"
                                }
                            },
                            "foreach": "[concat('@split(''',parameters('ProjectIds'),''','','')')]",
                            "runAfter": {
                                "Initialize_Project_IDs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_secret": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('GitlabSecret')}/value"
                            },
                            "runAfter": {
                                "Initialize_Page_Number": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Get_total_pages_for_User_Audit_logs": {
                            "inputs": {
                                "headers": {
                                    "PRIVATE-TOKEN": "@body('Get_secret')?['value']",
                                    "created_after": "@variables('created_after')"
                                },
                                "method": "GET",
                                "uri": "https://gitlab.com/api/v4/events"
                            },
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Initialize_Group_IDs": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "GroupIDs",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_Page_Number": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "PageNum",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_event_timer": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_Project_IDs": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ProjectIDs",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_event_timer": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "created_after",
                                        "type": "string",
                                        "value": "@{getPastTime(5,'Minute')}"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Current_time": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Parse_JSON": {
                            "inputs": {
                                "content": "@outputs('Get_total_pages_for_User_Audit_logs')['headers']",
                                "schema": {
                                    "properties": {
                                        "CF-Cache-Status": {
                                            "type": "string"
                                        },
                                        "CF-RAY": {
                                            "type": "string"
                                        },
                                        "Cache-Control": {
                                            "type": "string"
                                        },
                                        "Connection": {
                                            "type": "string"
                                        },
                                        "Content-Length": {
                                            "type": "string"
                                        },
                                        "Content-Type": {
                                            "type": "string"
                                        },
                                        "Date": {
                                            "type": "string"
                                        },
                                        "ETag": {
                                            "type": "string"
                                        },
                                        "Expect-CT": {
                                            "type": "string"
                                        },
                                        "GitLab-LB": {
                                            "type": "string"
                                        },
                                        "GitLab-SV": {
                                            "type": "string"
                                        },
                                        "Link": {
                                            "type": "string"
                                        },
                                        "NEL": {
                                            "type": "string"
                                        },
                                        "RateLimit-Limit": {
                                            "type": "string"
                                        },
                                        "RateLimit-Observed": {
                                            "type": "string"
                                        },
                                        "RateLimit-Remaining": {
                                            "type": "string"
                                        },
                                        "RateLimit-Reset": {
                                            "type": "string"
                                        },
                                        "RateLimit-ResetTime": {
                                            "type": "string"
                                        },
                                        "Referrer-Policy": {
                                            "type": "string"
                                        },
                                        "Report-To": {
                                            "type": "string"
                                        },
                                        "Server": {
                                            "type": "string"
                                        },
                                        "Strict-Transport-Security": {
                                            "type": "string"
                                        },
                                        "Transfer-Encoding": {
                                            "type": "string"
                                        },
                                        "Vary": {
                                            "type": "string"
                                        },
                                        "X-Content-Type-Options": {
                                            "type": "string"
                                        },
                                        "X-Frame-Options": {
                                            "type": "string"
                                        },
                                        "X-Next-Page": {
                                            "type": "string"
                                        },
                                        "X-Page": {
                                            "type": "string"
                                        },
                                        "X-Per-Page": {
                                            "type": "string"
                                        },
                                        "X-Prev-Page": {
                                            "type": "string"
                                        },
                                        "X-Request-Id": {
                                            "type": "string"
                                        },
                                        "X-Runtime": {
                                            "type": "string"
                                        },
                                        "X-Total": {
                                            "type": "string"
                                        },
                                        "X-Total-Pages": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "Get_total_pages_for_User_Audit_logs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "Until_User_Audit": {
                            "actions": {
                                "Get_User_Audit_logs": {
                                    "inputs": {
                                        "headers": {
                                            "PRIVATE-TOKEN": "@body('Get_secret')?['value']",
                                            "created_after": "@variables('created_after')"
                                        },
                                        "method": "GET",
                                        "uri": "https://gitlab.com/api/v4/events?per_page=100&page=@{variables('PageNum')}"
                                    },
                                    "runAfter": {
                                        "Increment_User_page_number": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http"
                                },
                                "Increment_User_page_number": {
                                    "inputs": {
                                        "name": "PageNum"
                                    },
                                    "runAfter": {},
                                    "type": "IncrementVariable"
                                },
                                "Post_User_Audit_Events": {
                                    "inputs": {
                                        "body": "@{body('Get_total_pages_for_User_Audit_logs')}",
                                        "headers": {
                                            "Log-Type": "GitLabUser"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/api/logs"
                                    },
                                    "runAfter": {
                                        "Get_User_Audit_logs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                }
                            },
                            "expression": "@equals(variables('PageNum'), int(body('Parse_JSON')?['X-Total-Pages']))",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Until"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            },
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            },
                            "type": "Recurrence"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureloganalyticsdatacollector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureloganalyticsdatacollector'))]",
                                "connectionName": "azureloganalyticsdatacollector",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureKeyVaultConnectionName'))]",
                                "connectionName": "AzureKeyVaultConnectionName",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {}
}