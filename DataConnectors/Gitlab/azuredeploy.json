{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "PlaybookName": {
            "defaultValue": "Gitlab-Sentinel",
            "type": "string"
        },
        "PersonalAccessToken": {
            "type": "securestring",
            "defaultValue": "<Personal Access Token>",
            "metadata": {
                "description": "The personal access token for gitlab instance with read access."
            }
        },
        "ProjectID": {
            "type": "string",
            "defaultValue": "<ProjectID>",
            "metadata": {
                "description": "The project id for gitlab projects to be audited."
            }
        },
        "GroupID": {
            "type": "string",
            "defaultValue": "<GroupID>",
            "metadata": {
                "description": "The group Id for gitlab groups to be audited."
            }
        }
  },
  "functions": [],
  "variables": {
    "AzureKeyVaultName": "[concat('kv-', parameters('PlaybookName'))]",
    "AzureKeyVaultConnectionName": "[concat('kv-', parameters('PlaybookName'))]",
    "azureloganalyticsdatacollector": "[concat('azureloganalyticsdatacollector-', parameters('PlaybookName'))]"
    },
  "resources": [{
    "name": "[variables('AzureKeyVaultName')]",
    "type": "Microsoft.KeyVault/vaults",
    "apiVersion": "2019-09-01",
    "location": "[resourceGroup().location]",
    "tags": {
      "displayName": "Gitlab-Keyvault",
      "Author": "Quantum Security"
    },
    "properties": {
      "enabledForDeployment": false,
      "enabledForTemplateDeployment": true,
      "enabledForDiskEncryption": false,
      "enableSoftDelete": true,
      "tenantId": "[subscription().tenantId]",
      "accessPolicies": [],
      "sku": {
        "name": "standard",
        "family": "A"
      }
    }
    },
    {
    "name": "[variables('azureloganalyticsdatacollector')]",
    "type": "Microsoft.Web/connections",
    "apiVersion": "2016-06-01",
    "location": "[resourceGroup().location]",
    "tags": {},
    "properties": {
      "displayName": "[variables('azureloganalyticsdatacollector')]",
      "parameterValues": {},
      "customParameterValues": {},
      "nonSecretParameterValues": {},
      "api": {
        "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
      }
    }
  },    {
    "name": "[variables('AzureKeyVaultConnectionName')]",
    "type": "Microsoft.Web/connections",
    "apiVersion": "2016-06-01",
    "location": "[resourceGroup().location]",
    "tags": {},
    "properties": {
      "displayName": "[variables('AzureKeyVaultConnectionName')]",
      "parameterValues": {},
      "customParameterValues": {},
      "nonSecretParameterValues": {},
      "api": {
        "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
      }
    }
  },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(variables('AzureKeyVaultName'), '/', 'GitlabSecret')]",
        "apiVersion": "2016-10-01",
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults', variables('AzureKeyVaultName'))]"
        ],
        "properties": {
          "value": "[parameters('PersonalAccessToken')]",
                          "contentType": "string",
                "attributes": {
                    "enabled": true
                }
        }
  }, {
    "name": "[parameters('PlaybookName')]",
    "type": "Microsoft.Logic/workflows",
    "apiVersion": "2017-07-01",
    "location": "[resourceGroup().location]",
    "properties": {

    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Current_time": {
                "inputs": {},
                "kind": "CurrentTime",
                "runAfter": {},
                "type": "Expression"
            },
            "Get_secret": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent('GitlabSecret')}/value"
                },
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Group_Audit_events": {
                "inputs": {
                    "headers": {
                        "PRIVATE-TOKEN": "@body('Get_secret')?['value']",
                        "created_after": "@variables('created_after')"
                    },
                    "method": "GET",
                    "uri": "[concat('https://gitlab.com/api/v4/groups/', parameters('GroupID'),'/audit_events')]"
                },
                "runAfter": {
                    "Get_secret": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "created_after",
                            "type": "string",
                            "value": "@{getPastTime(5,'Minute')}"
                        }
                    ]
                },
                "runAfter": {
                    "Current_time": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Project_Audit_Events": {
                "inputs": {
                    "headers": {
                        "PRIVATE-TOKEN": "@body('Get_secret')?['value']",
                        "created_after": "@variables('created_after')"
                    },
                    "method": "GET",
                    "uri": "[concat('https://gitlab.com/api/v4/projects/', parameters('ProjectID'),'/audit_events')]"
                },
                "runAfter": {
                    "Get_secret": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Send_Data": {
                "inputs": {
                    "body": "@{body('Project_Audit_Events')}",
                    "headers": {
                        "Log-Type": "GitlabProject"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/api/logs"
                },
                "runAfter": {
                    "Project_Audit_Events": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Send_Data_2": {
                "inputs": {
                    "body": "@{body('Group_Audit_events')}",
                    "headers": {
                        "Log-Type": "GitlabGroup"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/api/logs"
                },
                "runAfter": {
                    "Group_Audit_events": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Send_Data_3": {
                "inputs": {
                    "body": "@{body('User_Audit_Events')}",
                    "headers": {
                        "Log-Type": "GitlabUser"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/api/logs"
                },
                "runAfter": {
                    "User_Audit_Events": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "User_Audit_Events": {
                "inputs": {
                    "headers": {
                        "PRIVATE-TOKEN": "@body('Get_secret')?['value']",
                        "created_after": "@variables('created_after')"
                    },
                    "method": "GET",
                    "uri": "https://gitlab.com/api/v4/events"
                },
                "runAfter": {
                    "Get_secret": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "Recurrence": {
                "evaluatedRecurrence": {
                    "frequency": "Minute",
                    "interval": 5
                },
                "recurrence": {
                    "frequency": "Minute",
                    "interval": 5
                },
                "type": "Recurrence"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azureloganalyticsdatacollector": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureloganalyticsdatacollector'))]",
                    "connectionName": "azureloganalyticsdatacollector",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
                },
                "keyvault": {
                   "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureKeyVaultConnectionName'))]",
                    "connectionName": "AzureKeyVaultConnectionName",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                }
            }
        }
    }}}],
  "outputs": {}
}